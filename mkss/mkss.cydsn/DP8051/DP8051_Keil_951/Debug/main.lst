C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBUG) WL(2) PR(.\DP8051\DP8051_
                    -Keil_951\Debug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <project.h>
  13          #include <stdio.h>
  14          #include "PS2_Controller.h"
  15          #include "ICS3_5.h"
  16          
  17          uint8 g_timerFlag;
  18          CY_ISR(add_isr)
  19          {    
  20   1          g_timerFlag = 1;
  21   1      }
  22          
  23          void jodan(void);
  24          void tyudan(void);
  25          void karimen(void);
  26          void move(uint8 ID);
  27          void antei(void);
  28          void karimen2(void);
  29          
  30          int main()
  31          {
  32   1          uint8 circleFlag = 1, status = 1;
  33   1          int16 kakudo=0,count=0;
  34   1          char buffer[100];
  35   1          PS2Controller psData;
  36   1          CyGlobalIntEnable; /* Enable global interrupts. */
  37   1          //isr_mkss_StartEx(add_isr);
  38   1          UART_Servo_Start();
  39   1          PS2_Start();
  40   1          //UART_Debug_Start();
  41   1          CyDelay(1000);
  42   1          while(!PS2_Analog_Flag());
  43   1          tyudan();
  44   1          while(!PS2_Controller_get().START);
  45   1          /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  46   1          for(;;)
  47   1          {
  48   2              /* Place your application code here. */
  49   2              /*---10msごとにフラグ---*/
  50   2              //karimen();
  51   2              //karimen2();
  52   2              
  53   2              return 0;
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 2   

  54   2              
  55   2              if(g_timerFlag == 1)
  56   2              {
  57   3                  ////実験       
  58   3                  
  59   3      //            count++;
  60   3      //            Pos_Set(4,count*count*0.2);
  61   3      //            if(count==20){
  62   3      //                return 0;
  63   3      //            }
  64   3      //            
  65   3      //            /////
  66   3                  psData = PS2_Controller_get();
  67   3                  
  68   3                  /*---コントローラー処理---*/
  69   3                  if(psData.CIRCLE)
  70   3                  {
  71   4                      if(circleFlag)
  72   4                      {
  73   5                          if(status){
  74   6                              status = !status;
  75   6                          }
  76   5                          circleFlag = 0;
  77   5                      }
  78   4                  }
  79   3                  else
  80   3                  {
  81   4                      circleFlag = 1;
  82   4                  }
  83   3                  
  84   3                  /*---状態変化---*/
  85   3                  if(status){
  86   4                      tyudan();
  87   4                      //status=Pos_Set(4,0);みたいな感じにしたい
  88   4                  }
  89   3                  else{
  90   4                      karimen();
  91   4                      karimen2();
  92   4                      //move(4);
  93   4                  }
  94   3                      
  95   3                  
  96   3                  /*---デバッグ---*/
  97   3                  //sprintf(buffer,"%d\n", (int)Free(0));
  98   3                  //UART_Debug_PutString(buffer);
  99   3                  g_timerFlag = 0;
 100   3              }
 101   2          }
 102   1      }
*** WARNING C280 IN LINE 34 OF .\main.c: 'buffer': unreferenced local variable
 103          void move (uint8 ID){            
 104   1          static uint16 count = 0;
 105   1          static uint16 step = 0;
 106   1          if(step==0){
 107   2              Pos_Set(ID,count*0.2);
 108   2              if(count*0.1==55){
 109   3                  step++;
 110   3              }
 111   2          }
 112   1          else if(step==1){
 113   2              Pos_Set(ID,60);
 114   2              count=0;
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 3   

 115   2          }
 116   1          count++;
 117   1      }
 118          
 119          void jodan(void){
 120   1          Pos_Set(0,0);
 121   1          Pos_Set(1,30);
 122   1          Pos_Set(2,-35);
 123   1          Pos_Set(3,-10);
 124   1          Pos_Set(4,0);
 125   1      }
 126          
 127          void karimen(void){
 128   1          Pos_Set(0,0);
 129   1          Pos_Set(1,-15);
 130   1          Pos_Set(2,-90);
 131   1          Pos_Set(3,-10);
 132   1          Pos_Set(4,20);
 133   1      }
 134          void karimen2(void){
 135   1          Pos_Set(0,0);
 136   1          Pos_Set(1,-60);
 137   1          Pos_Set(2,0);
 138   1          Pos_Set(3,-10);
 139   1          Pos_Set(4,-15);
 140   1      }
 141          
 142          void antei(void){
 143   1          Pos_Set(0,0);
 144   1          Pos_Set(1,5);
 145   1          Pos_Set(2,4);
 146   1          Pos_Set(3,0);
 147   1          Pos_Set(4,-35);
 148   1      }
 149          void tyudan(void){
 150   1          Pos_Set(0,0);
 151   1          Pos_Set(1,25);
 152   1          Pos_Set(2,-110);
 153   1          Pos_Set(3,-10);
 154   1          Pos_Set(4,0);
 155   1      }
 156          
 157          
 158          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION add_isr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C085              PUSH    DPH1
0008 C084              PUSH    DPL1
000A C086              PUSH    DPS
000C 758600            MOV     DPS,#00H
000F C000        E     PUSH    ?C?XPAGE1SFR
0011 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 20
0014 900000      R     MOV     DPTR,#g_timerFlag
0017 7401              MOV     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
001A D000        E     POP     ?C?XPAGE1SFR
001C D086              POP     DPS
001E D084              POP     DPL1
0020 D085              POP     DPH1
0022 D082              POP     DPL
0024 D083              POP     DPH
0026 D0E0              POP     ACC
0028 32                RETI    
             ; FUNCTION add_isr (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0000 900000      R     MOV     DPTR,#circleFlag
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
0006 900000      R     MOV     DPTR,#status
0009 7401              MOV     A,#01H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 33
000C 900000      R     MOV     DPTR,#kakudo
000F E4                CLR     A
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
0014 900000      R     MOV     DPTR,#count
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
001C D2AF              SETB    EA
001E 9044F4            MOV     DPTR,#044F4H
0021 74FD              MOV     A,#0FDH
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0024 120000      E     LCALL   UART_Servo_Start
                                           ; SOURCE LINE # 39
0027 120000      E     LCALL   PS2_Start
                                           ; SOURCE LINE # 41
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 5   

002A 7FE8              MOV     R7,#0E8H
002C 7E03              MOV     R6,#03H
002E 7D00              MOV     R5,#00H
0030 7C00              MOV     R4,#00H
0032 120000      E     LCALL   _?CyDelay
0035         ?C0002:
                                           ; SOURCE LINE # 42
0035 120000      E     LCALL   PS2_Analog_Flag
0038 50FB              JNC     ?C0002
003A         ?C0003:
                                           ; SOURCE LINE # 43
003A 120000      R     LCALL   tyudan
003D         ?C0004:
                                           ; SOURCE LINE # 44
003D 120000      E     LCALL   PS2_Controller_get
0040 120000      E     LCALL   ?C?CLDPTR
0043 FF                MOV     R7,A
0044 EF                MOV     A,R7
0045 13                RRC     A
0046 13                RRC     A
0047 13                RRC     A
0048 541F              ANL     A,#01FH
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C 30E0EE            JNB     ACC.0,?C0004
004F         ?C0005:
                                           ; SOURCE LINE # 46
004F         ?C0006:
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 53
004F E4                CLR     A
0050 7E00              MOV     R6,#00H
0052 7F00              MOV     R7,#00H
0054 22                RET     
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0055 7F01              MOV     R7,#01H
0057         ?C0013:
0057 7F00              MOV     R7,#00H
0059         ?C0014:
0059 900000      R     MOV     DPTR,#status
005C EF                MOV     A,R7
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
005E         ?C0012:
                                           ; SOURCE LINE # 76
005E 900000      R     MOV     DPTR,#circleFlag
0061 E4                CLR     A
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0063 8006              SJMP    ?C0015
0065         ?C0010:
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 6   

0065 900000      R     MOV     DPTR,#circleFlag
0068 7401              MOV     A,#01H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 82
006B         ?C0015:
                                           ; SOURCE LINE # 85
006B 900000      R     MOV     DPTR,#status
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 6005              JZ      ?C0016
                                           ; SOURCE LINE # 86
0073 120000      R     LCALL   tyudan
                                           ; SOURCE LINE # 88
0076 8006              SJMP    ?C0017
0078         ?C0016:
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0078 120000      R     LCALL   karimen
                                           ; SOURCE LINE # 91
007B 120000      R     LCALL   karimen2
                                           ; SOURCE LINE # 93
007E         ?C0017:
                                           ; SOURCE LINE # 99
007E 900000      R     MOV     DPTR,#g_timerFlag
0081 E4                CLR     A
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0083 80CA              SJMP    ?C0006
                                           ; SOURCE LINE # 102
0085         ?C0008:
0085 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _move (BEGIN)
                                           ; SOURCE LINE # 103
0000 900000      R     MOV     DPTR,#ID
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
0005 900000      R     MOV     DPTR,#step
0008 E0                MOVX    A,@DPTR
0009 FE                MOV     R6,A
000A A3                INC     DPTR
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 4E                ORL     A,R6
000F 705E              JNZ     ?C0018
                                           ; SOURCE LINE # 107
0011 900000      R     MOV     DPTR,#ID
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 C007              PUSH    AR7
0018 900000      R     MOV     DPTR,#count
001B E0                MOVX    A,@DPTR
001C FC                MOV     R4,A
001D A3                INC     DPTR
001E E0                MOVX    A,@DPTR
001F FD                MOV     R5,A
0020 E4                CLR     A
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 7   

0021 120000      E     LCALL   ?C?FCASTI
0024 7BCD              MOV     R3,#0CDH
0026 7ACC              MOV     R2,#0CCH
0028 794C              MOV     R1,#04CH
002A 783E              MOV     R0,#03EH
002C 120000      E     LCALL   ?C?FPMUL
002F 120000      E     LCALL   ?C?CASTF
0032 AD07              MOV     R5,AR7
0034 AC06              MOV     R4,AR6
0036 AC06              MOV     R4,AR6
0038 AD07              MOV     R5,AR7
003A D007              POP     AR7
003C 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 108
003F 900000      R     MOV     DPTR,#count
0042 E0                MOVX    A,@DPTR
0043 FC                MOV     R4,A
0044 A3                INC     DPTR
0045 E0                MOVX    A,@DPTR
0046 FD                MOV     R5,A
0047 E4                CLR     A
0048 120000      E     LCALL   ?C?FCASTI
004B 7BCD              MOV     R3,#0CDH
004D 7ACC              MOV     R2,#0CCH
004F 79CC              MOV     R1,#0CCH
0051 783D              MOV     R0,#03DH
0053 120000      E     LCALL   ?C?FPMUL
0056 7B00              MOV     R3,#00H
0058 7A00              MOV     R2,#00H
005A 795C              MOV     R1,#05CH
005C 7842              MOV     R0,#042H
005E 120000      E     LCALL   ?C?FPCMP3
0061 702E              JNZ     ?C0020
                                           ; SOURCE LINE # 109
0063 900000      R     MOV     DPTR,#step
0066 E4                CLR     A
0067 75F001            MOV     B,#01H
006A 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
006D 8022              SJMP    ?C0020
006F         ?C0018:
                                           ; SOURCE LINE # 112
006F 900000      R     MOV     DPTR,#step
0072 E0                MOVX    A,@DPTR
0073 FE                MOV     R6,A
0074 A3                INC     DPTR
0075 E0                MOVX    A,@DPTR
0076 FF                MOV     R7,A
0077 EF                MOV     A,R7
0078 6401              XRL     A,#01H
007A 4E                ORL     A,R6
007B 7014              JNZ     ?C0020
                                           ; SOURCE LINE # 113
007D 900000      R     MOV     DPTR,#ID
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
0082 7D3C              MOV     R5,#03CH
0084 7C00              MOV     R4,#00H
0086 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 114
0089 900000      R     MOV     DPTR,#count
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 8   

008C E4                CLR     A
008D F0                MOVX    @DPTR,A
008E A3                INC     DPTR
008F E4                CLR     A
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
0091         ?C0020:
                                           ; SOURCE LINE # 116
0091 900000      R     MOV     DPTR,#count
0094 E4                CLR     A
0095 75F001            MOV     B,#01H
0098 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 117
009B 22                RET     
             ; FUNCTION _move (END)

             ; FUNCTION jodan (BEGIN)
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0000 7D00              MOV     R5,#00H
0002 7C00              MOV     R4,#00H
0004 7F00              MOV     R7,#00H
0006 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 121
0009 7D1E              MOV     R5,#01EH
000B 7C00              MOV     R4,#00H
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 122
0012 7DDD              MOV     R5,#0DDH
0014 7CFF              MOV     R4,#0FFH
0016 7F02              MOV     R7,#02H
0018 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 123
001B 7DF6              MOV     R5,#0F6H
001D 7CFF              MOV     R4,#0FFH
001F 7F03              MOV     R7,#03H
0021 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 124
0024 7D00              MOV     R5,#00H
0026 7C00              MOV     R4,#00H
0028 7F04              MOV     R7,#04H
002A 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 125
002D 22                RET     
             ; FUNCTION jodan (END)

             ; FUNCTION karimen (BEGIN)
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0000 7D00              MOV     R5,#00H
0002 7C00              MOV     R4,#00H
0004 7F00              MOV     R7,#00H
0006 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 129
0009 7DF1              MOV     R5,#0F1H
000B 7CFF              MOV     R4,#0FFH
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 130
0012 7DA6              MOV     R5,#0A6H
0014 7CFF              MOV     R4,#0FFH
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 9   

0016 7F02              MOV     R7,#02H
0018 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 131
001B 7DF6              MOV     R5,#0F6H
001D 7CFF              MOV     R4,#0FFH
001F 7F03              MOV     R7,#03H
0021 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 132
0024 7D14              MOV     R5,#014H
0026 7C00              MOV     R4,#00H
0028 7F04              MOV     R7,#04H
002A 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 133
002D 22                RET     
             ; FUNCTION karimen (END)

             ; FUNCTION karimen2 (BEGIN)
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
0000 7D00              MOV     R5,#00H
0002 7C00              MOV     R4,#00H
0004 7F00              MOV     R7,#00H
0006 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 136
0009 7DC4              MOV     R5,#0C4H
000B 7CFF              MOV     R4,#0FFH
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 137
0012 7D00              MOV     R5,#00H
0014 7C00              MOV     R4,#00H
0016 7F02              MOV     R7,#02H
0018 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 138
001B 7DF6              MOV     R5,#0F6H
001D 7CFF              MOV     R4,#0FFH
001F 7F03              MOV     R7,#03H
0021 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 139
0024 7DF1              MOV     R5,#0F1H
0026 7CFF              MOV     R4,#0FFH
0028 7F04              MOV     R7,#04H
002A 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 140
002D 22                RET     
             ; FUNCTION karimen2 (END)

             ; FUNCTION antei (BEGIN)
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
0000 7D00              MOV     R5,#00H
0002 7C00              MOV     R4,#00H
0004 7F00              MOV     R7,#00H
0006 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 144
0009 7D05              MOV     R5,#05H
000B 7C00              MOV     R4,#00H
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 145
0012 7D04              MOV     R5,#04H
0014 7C00              MOV     R4,#00H
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 10  

0016 7F02              MOV     R7,#02H
0018 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 146
001B 7D00              MOV     R5,#00H
001D 7C00              MOV     R4,#00H
001F 7F03              MOV     R7,#03H
0021 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 147
0024 7DDD              MOV     R5,#0DDH
0026 7CFF              MOV     R4,#0FFH
0028 7F04              MOV     R7,#04H
002A 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 148
002D 22                RET     
             ; FUNCTION antei (END)

             ; FUNCTION tyudan (BEGIN)
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
0000 7D00              MOV     R5,#00H
0002 7C00              MOV     R4,#00H
0004 7F00              MOV     R7,#00H
0006 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 151
0009 7D19              MOV     R5,#019H
000B 7C00              MOV     R4,#00H
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 152
0012 7D92              MOV     R5,#092H
0014 7CFF              MOV     R4,#0FFH
0016 7F02              MOV     R7,#02H
0018 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 153
001B 7DF6              MOV     R5,#0F6H
001D 7CFF              MOV     R4,#0FFH
001F 7F03              MOV     R7,#03H
0021 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 154
0024 7D00              MOV     R5,#00H
0026 7C00              MOV     R4,#00H
0028 7F04              MOV     R7,#04H
002A 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 155
002D 22                RET     
             ; FUNCTION tyudan (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    561    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5     113
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.51   MAIN                                                                  12/08/2015 23:30:01 PAGE 11  


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
