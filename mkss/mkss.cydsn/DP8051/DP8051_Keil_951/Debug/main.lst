C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBUG) WL(2) PR(.\DP8051\DP8051_
                    -Keil_951\Debug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <project.h>
  13          #include <stdio.h>
  14          #include "PS2_Controller.h"
  15          #include "ICS3_5.h"
  16          
  17          uint8 g_timerFlag;
  18          CY_ISR(add_isr)
  19          {    
  20   1          g_timerFlag = 1;    
  21   1      }
  22          
  23          void kamae(void);
  24          void karimen(void);
  25          void move(uint8 ID);
  26          
  27          int main()
  28          {
  29   1          uint8 circleFlag = 1, status = 1;
  30   1          int16 kakudo=0,count=0;
  31   1          char buffer[100];
  32   1          PS2Controller psData;
  33   1          CyGlobalIntEnable; /* Enable global interrupts. */
  34   1          isr_mkss_StartEx(add_isr);
  35   1          UART_Servo_Start();
  36   1          PS2_Start();
  37   1          //UART_Debug_Start();
  38   1          CyDelay(1000);
  39   1          while(!PS2_Analog_Flag());
  40   1          while(!PS2_Controller_get().START);
  41   1          /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  42   1          for(;;)
  43   1          {
  44   2              /* Place your application code here. */
  45   2              /*---10msごとにフラグ---*/
  46   2              if(g_timerFlag == 1)
  47   2              {
  48   3                  ////実験            
  49   3                  count++;
  50   3                  Pos_Set(4,count*count*0.2);
  51   3                  if(count==20){
  52   4                      return 0;
  53   4                  }
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 2   

  54   3                  /////
  55   3                  psData = PS2_Controller_get();
  56   3                  
  57   3                  /*---コントローラー処理---*/
  58   3                  if(psData.CIRCLE)
  59   3                  {
  60   4                      if(circleFlag)
  61   4                      {
  62   5                          if(status){
  63   6                              status = !status;
  64   6                          }
  65   5                          circleFlag = 0;
  66   5                      }
  67   4                  }
  68   3                  else
  69   3                  {
  70   4                      circleFlag = 1;
  71   4                  }
  72   3                  
  73   3                  /*---状態変化---*/
  74   3                  if(status){
  75   4                      Pos_Set(4,0);
  76   4                      //status=Pos_Set(4,0);みたいな感じにしたい
  77   4                  }
  78   3                  else{
  79   4                      move(4);
  80   4                  }
  81   3                      
  82   3                  /*---デバッグ---*/
  83   3                  //sprintf(buffer,"%d\n", (int)Free(0));
  84   3                  //UART_Debug_PutString(buffer);
  85   3                  g_timerFlag = 0;
  86   3              }
  87   2          }
  88   1      }
*** WARNING C280 IN LINE 31 OF .\main.c: 'buffer': unreferenced local variable
  89          void move (uint8 ID){            
  90   1          static uint16 count = 0;
  91   1          static uint16 step = 0;
  92   1          if(step==0){
  93   2              Pos_Set(ID,count*0.2);
  94   2              if(count*0.1==55){
  95   3                  step++;
  96   3              }
  97   2          }
  98   1          else if(step==1){
  99   2              Pos_Set(ID,60);
 100   2              count=0;
 101   2          }
 102   1          count++;
 103   1      }
 104          
 105          void kamae(void){
 106   1          Pos_Set(0,0);
 107   1          Pos_Set(1,30);
 108   1          Pos_Set(2,-20);
 109   1          Pos_Set(3,-10);
 110   1          Pos_Set(4,0);
 111   1      }
 112          
 113          void karimen(void){
 114   1          Pos_Set(0,0);
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 3   

 115   1          Pos_Set(1,-30);
 116   1          Pos_Set(2,-20);
 117   1          Pos_Set(3,-10);
 118   1          Pos_Set(4,-30);
 119   1      }
 120          
 121          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION add_isr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C085              PUSH    DPH1
0008 C084              PUSH    DPL1
000A C086              PUSH    DPS
000C 758600            MOV     DPS,#00H
000F C000        E     PUSH    ?C?XPAGE1SFR
0011 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 20
0014 900000      R     MOV     DPTR,#g_timerFlag
0017 7401              MOV     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
001A D000        E     POP     ?C?XPAGE1SFR
001C D086              POP     DPS
001E D084              POP     DPL1
0020 D085              POP     DPH1
0022 D082              POP     DPL
0024 D083              POP     DPH
0026 D0E0              POP     ACC
0028 32                RETI    
             ; FUNCTION add_isr (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
0000 900000      R     MOV     DPTR,#circleFlag
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
0006 900000      R     MOV     DPTR,#status
0009 7401              MOV     A,#01H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 30
000C 900000      R     MOV     DPTR,#kakudo
000F E4                CLR     A
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
0014 900000      R     MOV     DPTR,#count
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 33
001C D2AF              SETB    EA
001E 9044F4            MOV     DPTR,#044F4H
0021 74FD              MOV     A,#0FDH
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 34
0024 7E00        R     MOV     R6,#HIGH add_isr
0026 7F00        R     MOV     R7,#LOW add_isr
0028 120000      E     LCALL   _isr_mkss_StartEx
                                           ; SOURCE LINE # 35
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 5   

002B 120000      E     LCALL   UART_Servo_Start
                                           ; SOURCE LINE # 36
002E 120000      E     LCALL   PS2_Start
                                           ; SOURCE LINE # 38
0031 7FE8              MOV     R7,#0E8H
0033 7E03              MOV     R6,#03H
0035 7D00              MOV     R5,#00H
0037 7C00              MOV     R4,#00H
0039 120000      E     LCALL   _?CyDelay
003C         ?C0002:
                                           ; SOURCE LINE # 39
003C 120000      E     LCALL   PS2_Analog_Flag
003F 50FB              JNC     ?C0002
0041         ?C0003:
0041         ?C0004:
                                           ; SOURCE LINE # 40
0041 120000      E     LCALL   PS2_Controller_get
0044 120000      E     LCALL   ?C?CLDPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 13                RRC     A
004A 13                RRC     A
004B 13                RRC     A
004C 541F              ANL     A,#01FH
004E FF                MOV     R7,A
004F EF                MOV     A,R7
0050 30E0EE            JNB     ACC.0,?C0004
0053         ?C0005:
                                           ; SOURCE LINE # 42
0053         ?C0006:
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 46
0053 900000      R     MOV     DPTR,#g_timerFlag
0056 E0                MOVX    A,@DPTR
0057 FF                MOV     R7,A
0058 EF                MOV     A,R7
0059 B401F7            CJNE    A,#01H,?C0006
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 49
005C 900000      R     MOV     DPTR,#count
005F E4                CLR     A
0060 75F001            MOV     B,#01H
0063 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 50
0066 900000      R     MOV     DPTR,#count
0069 E0                MOVX    A,@DPTR
006A FC                MOV     R4,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FD                MOV     R5,A
006E 900000      R     MOV     DPTR,#count
0071 E0                MOVX    A,@DPTR
0072 FE                MOV     R6,A
0073 A3                INC     DPTR
0074 E0                MOVX    A,@DPTR
0075 FF                MOV     R7,A
0076 120000      E     LCALL   ?C?IMUL
0079 AC06              MOV     R4,AR6
007B AD07              MOV     R5,AR7
007D EC                MOV     A,R4
007E 120000      E     LCALL   ?C?FCASTI
0081 7BCD              MOV     R3,#0CDH
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 6   

0083 7ACC              MOV     R2,#0CCH
0085 794C              MOV     R1,#04CH
0087 783E              MOV     R0,#03EH
0089 120000      E     LCALL   ?C?FPMUL
008C 120000      E     LCALL   ?C?CASTF
008F AD07              MOV     R5,AR7
0091 AC06              MOV     R4,AR6
0093 AC06              MOV     R4,AR6
0095 AD07              MOV     R5,AR7
0097 7F04              MOV     R7,#04H
0099 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 51
009C 900000      R     MOV     DPTR,#count
009F E0                MOVX    A,@DPTR
00A0 FE                MOV     R6,A
00A1 A3                INC     DPTR
00A2 E0                MOVX    A,@DPTR
00A3 FF                MOV     R7,A
00A4 EF                MOV     A,R7
00A5 6414              XRL     A,#014H
00A7 4E                ORL     A,R6
00A8 7006              JNZ     ?C0009
                                           ; SOURCE LINE # 52
00AA E4                CLR     A
00AB 7E00              MOV     R6,#00H
00AD 7F00              MOV     R7,#00H
00AF 22                RET     
                                           ; SOURCE LINE # 53
00B0         ?C0009:
                                           ; SOURCE LINE # 55
00B0 120000      E     LCALL   PS2_Controller_get
00B3 C003              PUSH    AR3
00B5 C002              PUSH    AR2
00B7 C001              PUSH    AR1
00B9 7B01              MOV     R3,#01H
00BB 7A00        R     MOV     R2,#HIGH psData
00BD 7900        R     MOV     R1,#LOW psData
00BF A801              MOV     R0,AR1
00C1 AC02              MOV     R4,AR2
00C3 AD03              MOV     R5,AR3
00C5 D001              POP     AR1
00C7 D002              POP     AR2
00C9 D003              POP     AR3
00CB 7E00              MOV     R6,#00H
00CD 7F06              MOV     R7,#06H
00CF 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 58
00D2 900000      R     MOV     DPTR,#psData+01H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 EF                MOV     A,R7
00D8 30E52A            JNB     ACC.5,?C0011
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
00DB 900000      R     MOV     DPTR,#circleFlag
00DE E0                MOVX    A,@DPTR
00DF FF                MOV     R7,A
00E0 EF                MOV     A,R7
00E1 6028              JZ      ?C0016
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
00E3 900000      R     MOV     DPTR,#status
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 7   

00E6 E0                MOVX    A,@DPTR
00E7 FF                MOV     R7,A
00E8 EF                MOV     A,R7
00E9 6013              JZ      ?C0013
                                           ; SOURCE LINE # 63
00EB 900000      R     MOV     DPTR,#status
00EE E0                MOVX    A,@DPTR
00EF FF                MOV     R7,A
00F0 EF                MOV     A,R7
00F1 7004              JNZ     ?C0014
00F3 7F01              MOV     R7,#01H
00F5 8002              SJMP    ?C0015
00F7         ?C0014:
00F7 7F00              MOV     R7,#00H
00F9         ?C0015:
00F9 900000      R     MOV     DPTR,#status
00FC EF                MOV     A,R7
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
00FE         ?C0013:
                                           ; SOURCE LINE # 65
00FE 900000      R     MOV     DPTR,#circleFlag
0101 E4                CLR     A
0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0103 8006              SJMP    ?C0016
0105         ?C0011:
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
0105 900000      R     MOV     DPTR,#circleFlag
0108 7401              MOV     A,#01H
010A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
010B         ?C0016:
                                           ; SOURCE LINE # 74
010B 900000      R     MOV     DPTR,#status
010E E0                MOVX    A,@DPTR
010F FF                MOV     R7,A
0110 EF                MOV     A,R7
0111 600B              JZ      ?C0017
                                           ; SOURCE LINE # 75
0113 7D00              MOV     R5,#00H
0115 7C00              MOV     R4,#00H
0117 7F04              MOV     R7,#04H
0119 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 77
011C 8005              SJMP    ?C0018
011E         ?C0017:
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
011E 7F04              MOV     R7,#04H
0120 120000      R     LCALL   _move
                                           ; SOURCE LINE # 80
0123         ?C0018:
                                           ; SOURCE LINE # 85
0123 900000      R     MOV     DPTR,#g_timerFlag
0126 E4                CLR     A
0127 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
0128 020000      R     LJMP    ?C0006
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 8   

                                           ; SOURCE LINE # 88
012B         ?C0010:
012B 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _move (BEGIN)
                                           ; SOURCE LINE # 89
0000 900000      R     MOV     DPTR,#ID
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
0005 900000      R     MOV     DPTR,#step
0008 E0                MOVX    A,@DPTR
0009 FE                MOV     R6,A
000A A3                INC     DPTR
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 4E                ORL     A,R6
000F 705E              JNZ     ?C0019
                                           ; SOURCE LINE # 93
0011 900000      R     MOV     DPTR,#ID
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 C007              PUSH    AR7
0018 900000      R     MOV     DPTR,#count
001B E0                MOVX    A,@DPTR
001C FC                MOV     R4,A
001D A3                INC     DPTR
001E E0                MOVX    A,@DPTR
001F FD                MOV     R5,A
0020 E4                CLR     A
0021 120000      E     LCALL   ?C?FCASTI
0024 7BCD              MOV     R3,#0CDH
0026 7ACC              MOV     R2,#0CCH
0028 794C              MOV     R1,#04CH
002A 783E              MOV     R0,#03EH
002C 120000      E     LCALL   ?C?FPMUL
002F 120000      E     LCALL   ?C?CASTF
0032 AD07              MOV     R5,AR7
0034 AC06              MOV     R4,AR6
0036 AC06              MOV     R4,AR6
0038 AD07              MOV     R5,AR7
003A D007              POP     AR7
003C 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 94
003F 900000      R     MOV     DPTR,#count
0042 E0                MOVX    A,@DPTR
0043 FC                MOV     R4,A
0044 A3                INC     DPTR
0045 E0                MOVX    A,@DPTR
0046 FD                MOV     R5,A
0047 E4                CLR     A
0048 120000      E     LCALL   ?C?FCASTI
004B 7BCD              MOV     R3,#0CDH
004D 7ACC              MOV     R2,#0CCH
004F 79CC              MOV     R1,#0CCH
0051 783D              MOV     R0,#03DH
0053 120000      E     LCALL   ?C?FPMUL
0056 7B00              MOV     R3,#00H
0058 7A00              MOV     R2,#00H
005A 795C              MOV     R1,#05CH
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 9   

005C 7842              MOV     R0,#042H
005E 120000      E     LCALL   ?C?FPCMP3
0061 702E              JNZ     ?C0021
                                           ; SOURCE LINE # 95
0063 900000      R     MOV     DPTR,#step
0066 E4                CLR     A
0067 75F001            MOV     B,#01H
006A 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
006D 8022              SJMP    ?C0021
006F         ?C0019:
                                           ; SOURCE LINE # 98
006F 900000      R     MOV     DPTR,#step
0072 E0                MOVX    A,@DPTR
0073 FE                MOV     R6,A
0074 A3                INC     DPTR
0075 E0                MOVX    A,@DPTR
0076 FF                MOV     R7,A
0077 EF                MOV     A,R7
0078 6401              XRL     A,#01H
007A 4E                ORL     A,R6
007B 7014              JNZ     ?C0021
                                           ; SOURCE LINE # 99
007D 900000      R     MOV     DPTR,#ID
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
0082 7D3C              MOV     R5,#03CH
0084 7C00              MOV     R4,#00H
0086 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 100
0089 900000      R     MOV     DPTR,#count
008C E4                CLR     A
008D F0                MOVX    @DPTR,A
008E A3                INC     DPTR
008F E4                CLR     A
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
0091         ?C0021:
                                           ; SOURCE LINE # 102
0091 900000      R     MOV     DPTR,#count
0094 E4                CLR     A
0095 75F001            MOV     B,#01H
0098 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 103
009B 22                RET     
             ; FUNCTION _move (END)

             ; FUNCTION kamae (BEGIN)
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0000 7D00              MOV     R5,#00H
0002 7C00              MOV     R4,#00H
0004 7F00              MOV     R7,#00H
0006 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 107
0009 7D1E              MOV     R5,#01EH
000B 7C00              MOV     R4,#00H
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 108
0012 7DEC              MOV     R5,#0ECH
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 10  

0014 7CFF              MOV     R4,#0FFH
0016 7F02              MOV     R7,#02H
0018 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 109
001B 7DF6              MOV     R5,#0F6H
001D 7CFF              MOV     R4,#0FFH
001F 7F03              MOV     R7,#03H
0021 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 110
0024 7D00              MOV     R5,#00H
0026 7C00              MOV     R4,#00H
0028 7F04              MOV     R7,#04H
002A 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 111
002D 22                RET     
             ; FUNCTION kamae (END)

             ; FUNCTION karimen (BEGIN)
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
0000 7D00              MOV     R5,#00H
0002 7C00              MOV     R4,#00H
0004 7F00              MOV     R7,#00H
0006 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 115
0009 7DE2              MOV     R5,#0E2H
000B 7CFF              MOV     R4,#0FFH
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 116
0012 7DEC              MOV     R5,#0ECH
0014 7CFF              MOV     R4,#0FFH
0016 7F02              MOV     R7,#02H
0018 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 117
001B 7DF6              MOV     R5,#0F6H
001D 7CFF              MOV     R4,#0FFH
001F 7F03              MOV     R7,#03H
0021 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 118
0024 7DE2              MOV     R5,#0E2H
0026 7CFF              MOV     R4,#0FFH
0028 7F04              MOV     R7,#04H
002A 120000      E     LCALL   _Pos_Set
                                           ; SOURCE LINE # 119
002D 22                RET     
             ; FUNCTION karimen (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    589    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5     113
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.51   MAIN                                                                  12/08/2015 03:21:55 PAGE 11  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
